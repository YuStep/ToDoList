{"version":3,"sources":["components/Search/index.js","components/Search/Search.jsx","components/Header/index.js","components/Header/Header.jsx","components/ToDoListItem/index.js","components/ToDoListItem/ToDoListItem.jsx","components/ToDoList/index.js","components/ToDoList/ToDoList.jsx","components/DoingAdder/index.js","components/DoingAdder/DoingAdder.jsx","components/Main/index.js","components/Main/Main.jsx","components/App/App.js","components/App/index.js","index.js"],"names":["Search","setSearch","setType","useState","value","setValue","active","setActive","onHandleType","e","classNames","className","type","placeholder","onChange","target","onClick","Header","toDo","done","ToDoListItem","text","important","onDelete","onToggleImportant","onToggleDone","ToDoList","doings","elements","map","doing","id","doingProps","DoingAdder","AddDoing","Function","prototype","onSubmit","preventDefault","disabled","Main","App","setDoings","maxId","setMaxId","search","setMySearch","setMyType","visibleDoings","length","filter","item","toLowerCase","indexOf","searchDoings","arr","filterArr","doneCount","toDoCoutn","toggleProperty","elementId","propertyName","oldItemIndex","findIndex","oldItem","newItem","slice","CreateItem","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d29a2f0.chunk.js","sourcesContent":["import Search from \"./Search\";\r\n\r\nexport default Search;","import { useState } from \"react\";\r\nimport './Search.css';\r\nexport default function Search({setSearch, setType}){\r\n    const [value,setValue] = useState('');\r\n    const [active,setActive] = useState('');\r\n    function onHandleType(e){\r\n        setType(e);\r\n        setActive(e);\r\n    }\r\n    let classNames = 'btn ' + 'btn-outline-secondary';\r\n    return(\r\n        <div className = 'searchWrap'>\r\n            <input\r\n            className = \"input-group-text\" \r\n            type=\"text\"\r\n            value = {value}\r\n            placeholder=\"type to search\"\r\n            onChange={(e)=>{\r\n                setValue(e.target.value); \r\n                setSearch(e.target.value);\r\n                }}\r\n             />\r\n            <button className = {active===\"all\" ? classNames+' active' : classNames} onClick = {()=>onHandleType('all')}>All</button>\r\n            <button className = {active===\"active\" ? classNames+' active' : classNames} onClick = {()=>onHandleType(\"active\")}>Active</button>\r\n            <button className = {active===\"done\" ? classNames+' active' : classNames} onClick = {()=>onHandleType(\"done\")}>Done</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;","import Search from \"../Search\";\r\nimport './Header.css';\r\nexport default function Header({toDo,done,setSearch,setType}) {\r\n    return (\r\n        <header>\r\n            <>\r\n                <h1 className = \"text-secondary\" >Todo List</h1>\r\n                <p className = \"text-secondary\" >{toDo} more to do,{done} done</p>\r\n            </>\r\n            <Search setSearch={setSearch} setType = {setType}/>\r\n            \r\n        </header>\r\n    )\r\n}","import ToDoListItem from \"./ToDoListItem\";\r\n\r\nexport default ToDoListItem;","import './ToDoListItem.css';\r\nexport default function ToDoListItem({ text, important, done, onDelete, onToggleImportant, onToggleDone, }) {\r\n\r\n\r\n\r\n    let classNames = 'todo-list-item flex';\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n    if (done) {\r\n        classNames += \" done\";\r\n    }\r\n    return (\r\n        <span className={classNames} >\r\n            <span onClick={onToggleDone} className=\"todo-list-item-label\">{text}</span>\r\n            <div>\r\n                <button className=\"btn btn-outline-success btn-sm \" onClick={onToggleImportant}>\r\n                    <i className=\"bi bi-exclamation-circle\"></i>\r\n                </button>\r\n                <button className=\"btn btn-outline-danger btn-sm \" onClick={onDelete}>\r\n                    <i className=\"bi bi-trash-fill\"></i>\r\n                </button>\r\n            </div>\r\n        </span>\r\n    )\r\n}","import ToDoList from \"./ToDoList\";\r\n\r\nexport default ToDoList;","import ToDoListItem from \"../ToDoListItem\";\r\nimport './ToDoList.css';\r\nexport default function ToDoList({ doings = [],onToggleImportant,onToggleDone,onDelete,}) {\r\n\r\n    const elements = doings.map((doing) => {\r\n        const { id, ...doingProps } = doing;\r\n        return (\r\n          <li key={id} className=\"list-group-item\">\r\n            <ToDoListItem\r\n              key={id}\r\n              { ...doingProps }\r\n              onToggleImportant={ () => onToggleImportant(id) }\r\n              onToggleDone={ () => onToggleDone(id) }\r\n              onDelete={ () => onDelete(id) } \r\n              />\r\n              \r\n          </li>\r\n        );\r\n      });\r\n    \r\n      return (<ul className=\"todo-list list-group\">{ elements }</ul>);\r\n}","import DoingAdder from \"./DoingAdder\";\r\n\r\nexport default DoingAdder;","import { useState } from \"react\"\r\nimport './DoingAdder.css';\r\nexport default function DoingAdder({ AddDoing = Function.prototype }) {\r\n    const [value, setValue] = useState('');\r\n\r\n    \r\n    function onSubmit(e){\r\n        e.preventDefault();\r\n        AddDoing(value);\r\n        setValue(\"\");\r\n    }\r\n    return (\r\n        <form className = \"form\" onSubmit={onSubmit}>\r\n            <input\r\n                className = \"input-group-text\"  \r\n                type=\"text\"\r\n                placeholder=\"What needs to be done?\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n            />\r\n            <button\r\n            className = \"btn btn-outline-secondary\" \r\n            type='submit' \r\n            disabled = {!value}>\r\n                Add\r\n            </button>\r\n        </form>\r\n    )\r\n}","import Main from \"./Main\";\r\n\r\nexport default Main;","import ToDoList from \"../ToDoList/\";\r\nimport DoingAdder from \"../DoingAdder/\";\r\nexport default function Main({doings,AddDoing,onDelete,onToggleDone,onToggleImportant}) {\r\n    \r\n\r\n    return (\r\n        <main>\r\n            <ToDoList doings={doings}  onToggleDone ={onToggleDone} onToggleImportant = {onToggleImportant} onDelete={onDelete}/>\r\n            <DoingAdder AddDoing={AddDoing}/>\r\n        </main>\r\n    )\r\n}","import Header from '../Header';\nimport Main from '../Main/';\n\nimport { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n\n \n  const [doings, setDoings] = useState([\n    { id: 1, important: true, text: \"Learn React\", done: false },\n    { id: 2, important: false, text: \"Eat\", done: false },\n  ]);\n  const [maxId,setMaxId] = useState(100);\n  const [search,setMySearch] = useState(''); \n  const [type,setMyType] = useState('all');\n  const visibleDoings = searchDoings(filterArr(doings,type),search);\n  const doneCount = doings.filter(item=>item.done).length;\n  const toDoCoutn = doings.length-doneCount;\n  function onDelete(id) {\n    setDoings((doings) => doings.filter((e => e.id !== id)));\n  }\n\n  function toggleProperty(arr, elementId, propertyName) {\n    const oldItemIndex = arr.findIndex((e) => e.id === elementId);\n    const oldItem = arr[oldItemIndex];\n    const newItem = { ...oldItem, [propertyName]: !oldItem[propertyName] }\n    return ([...doings.slice(0, oldItemIndex), newItem, ...doings.slice(oldItemIndex + 1)]);\n  }\n\n  function onToggleDone(id) {\n    setDoings((state) => {\n      return toggleProperty(state, id, 'done');\n    })\n  }\n\n  function onToggleImportant(id) {\n    setDoings((state) => {\n      return toggleProperty(state, id, 'important');\n    })\n  }\n\n  function CreateItem(text) {\n    setMaxId((value)=>value+=1);\n    return {\n      id: maxId,\n      important: false,\n      text: text,\n      done: false,\n    }\n  }\n  function setSearch(text){\n    setMySearch(text);\n  }\n  function setType(text){\n    setMyType(text);\n  }\n  function AddDoing(text) {\n    setDoings([...doings, CreateItem(text)]);\n  }\n\n  function searchDoings(doings,search){\n    if(search.length===0){\n      return doings;\n    }\n    return doings.filter(item=>item.text.toLowerCase().indexOf(search.toLowerCase()) > -1) ;\n\n  }\n  function filterArr(arr,type){\n    \n    if(type==='all'){\n      return arr;\n    }\n    else if(type === 'done'){\n       return arr.filter((item)=>item.done)\n    }\n    else if(type === 'active'){\n      return arr.filter((item)=>!item.done)\n    }\n  }\n  \n  \n  return (\n    <div className=\"todo-app\">\n      <Header toDo = {toDoCoutn} done = {doneCount} setSearch={setSearch} setType = {setType}/>\n      <Main doings={visibleDoings} onDelete={onDelete} onToggleDone={onToggleDone} onToggleImportant={onToggleImportant} AddDoing={AddDoing} />\n    </div>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}